# -*- coding: utf-8 -*-
"""Customer segmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nOUVpOrL7_1WpwrXV_32qit8DpNw_QOf
"""

"""
Customer Segmentation (Bank Marketing Dataset)
Goal: Group customers into clusters for better targeting
Techniques: K-Means + PCA

"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Load dataset with correct separator
df = pd.read_csv("bank_marketing.csv", sep=";")

print("Dataset shape:", df.shape)
print("Columns:\n", df.columns)

# 2. Select numeric features for clustering
features = ['age', 'duration', 'campaign', 'pdays', 'previous']
X = df[features]

# 3. Handle missing values if any
X = X.replace("unknown", np.nan)
X = X.dropna()

# 4. Scale data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# 5. Reduce dimensions for visualization
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

# 6. Apply K-Means clustering
kmeans = KMeans(n_clusters=3, random_state=42, n_init=10)
clusters = kmeans.fit_predict(X_scaled)

df['Cluster'] = clusters

# 7. Analyze clusters
print("\nCluster Summary:")
print(df.groupby('Cluster')[features].mean())

# 8. Visualize clusters
plt.figure(figsize=(10,8))
sns.scatterplot(x=X_pca[:,0], y=X_pca[:,1], hue=clusters, palette="Set2", s=100)
plt.xlabel("PCA1")
plt.ylabel("PCA2")
plt.title("Customer Segmentation Clusters (Bank Marketing)")
plt.legend(title="Cluster")
plt.show()